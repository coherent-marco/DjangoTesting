from django.test import TestCase
from products.models import Currency, Insurer, InsurerTranslation, InsurerRating

class SomeModelTest(TestCase):
    def setUp(self):
        # Code Django will run before each test
        # Set up your test environment here
        # eg. Create a fake user account if needed
        currency = Currency(
            code = 'hkd'
        )
        currency.save()
    
    def tearDown(self):
        # Code Django will run after each test
        # Clear the system of any test artefacts here
        # eg. Delete any files generated by the test
        pass

    # General test format
    def test_insurer_save_and_retrieve(self):
        # 1. Set up the test
        currency = Currency.objects.get(code = 'hkd')
        
        # 2. Perform the logic
        insurer = Insurer(
            code = 'cca',
            contact_no = '+852 12345678',
            fax_no = None,
            default_currency = currency
        )
        insurer.save()
        
        # 3. Check if the test passed or failed
        cca = Insurer.objects.get(code = 'cca')
        self.assertEquals(cca.code, 'cca')
        self.assertEquals(cca.contact_no, '+852 12345678')
        self.assertEquals(cca.default_currency.code, 'hkd')
        
        # Generally the format is (value1, value2, error message)
        # Other assertions:
        # self.assertTrue(value1, value2)
        # self.assertFalse(value1, value2)
        # self.assertIn(needle, haystack)        
        # Refer to https://docs.djangoproject.com/en/dev/topics/testing/tools/#assertions for a complete list
        
    # Alternative test format for checking exceptions
    # def test_divide_by_zero(self):
        # 1. Set up the test
        # calc = Calculator()
        
        # 3. Check error was raised
        # with self.assertRaises(ValueError):
            # 2. Perform the logic
            # calc.divide(12, 0)